name: CI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    
    services:
      mariadb:
        image: mariadb:10.6
        env:
          MYSQL_ROOT_PASSWORD: travis
          MYSQL_DATABASE: test_frappe
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout frappe_assistant_core
      uses: actions/checkout@v4
      with:
        path: apps/frappe_assistant_core

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          redis-server \
          libmariadb-dev \
          libpython3-dev \
          python3-pip \
          python3-venv \
          python3-setuptools \
          wkhtmltopdf \
          xvfb \
          libfontconfig \
          git \
          curl

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install Bench
      run: |
        pip install frappe-bench
        
    - name: Initialize Bench
      run: |
        bench init frappe-bench --frappe-branch version-15 --skip-redis-config-generation
        cd frappe-bench
        bench set-mariadb-host 127.0.0.1
        bench set-redis-cache-host 127.0.0.1
        bench set-redis-queue-host 127.0.0.1
        bench set-redis-socketio-host 127.0.0.1

    - name: Create test site
      working-directory: frappe-bench
      run: |
        bench new-site test_site \
          --mariadb-root-password travis \
          --admin-password admin \
          --no-mariadb-socket

    - name: Setup frappe_assistant_core app
      run: |
        # Copy the app to bench apps folder
        cp -r apps/frappe_assistant_core frappe-bench/apps/
        
        # Add to apps.txt
        echo "frappe_assistant_core" >> frappe-bench/sites/apps.txt
        
        # Install dependencies
        cd frappe-bench
        pip install -e apps/frappe_assistant_core

    - name: Install frappe_assistant_core to site
      working-directory: frappe-bench
      run: |
        bench --site test_site install-app frappe_assistant_core

    - name: Run Tests
      working-directory: frappe-bench
      run: |
        bench --site test_site run-tests --app frappe_assistant_core --coverage

    - name: Show Test Logs on Failure
      if: failure()
      working-directory: frappe-bench
      run: |
        echo "=== Frappe Log ==="
        cat logs/frappe.log || true
        echo "=== Scheduler Log ==="
        cat logs/scheduler.log || true
        echo "=== Worker Log ==="
        cat logs/worker.log || true
        echo "=== Test Site Error Log ==="
        cat sites/test_site/error_log.json || true

  linting:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout frappe_assistant_core
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        pip install ruff mypy
    
    - name: Run linting
      run: |
        # Run ruff for linting
        ruff check . || true
        # Run mypy for type checking  
        mypy . --ignore-missing-imports || true